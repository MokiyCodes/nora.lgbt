@use '../style/vars';

.pageContents {
  --headerSize: 8px;
  width: 100vw;
  height: calc(100vh - var(--headerSize));
  position: fixed;
  left: 0;
  top: var(--headerSize);
  transition: top 1s;
  backdrop-filter: blur(5px);
}
@if vars.$movePageOnHeaderHover == true {
  @debug 'Moving page contents on header hover';
  header:hover + .pageContents {
    --headerSize: 56px;
  }
}

// ANCHOR [data-noHeader]
[data-noHeader],
[data-noHeader] * {
  --headerSize: 0 !important;
}

// ANCHOR [data-noCursor]
[data-noCursor],
[data-noCursor] * {
  cursor: none;
}

// ANCHOR mobile
@media screen and (max-width: vars.$mobile) {
  .pageContents {
    --headerSize: 56px;
  }
}

.pageContents::after {
  white-space: pre;
  color: #fff;
  display: block;
  width: 95vw !important;
  text-align: center;
  position: fixed;
  left: 50vw;
  top: 50vh;
  transform: translate(-50%, -50%);
  pointer-events: none;
  word-break: break-all;
}
.pageContents::before {
  content: '\A';
  white-space: pre;
  display: block;
  width: 100vw;
  height: 100vh;
  text-align: center;
  position: fixed;
  left: 50vw;
  top: 50vh;
  transform: translate(-50%, -50%);
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.5s;
}
.pageContents *,
header {
  transition: filter 0.5s;
}
@media screen and (max-width: vars.$unusableWidth) {
  .pageContents::before {
    opacity: 1;
  }
  .pageContents::after {
    content: 'Your screen is too small to display this page' !important;
  }
  .pageContents * {
    display: none;
  }
}
[data-darkreader-scheme] {
  .pageContents::before {
    opacity: 0.25;
    pointer-events: all;
  }
  .pageContents::after {
    content: 'Dark reader breaks this page - This page is dark by default\APlease disable dark reader for this page';
  }
  .pageContents *,
  header {
    // display: none;
    filter: blur(10px);
    pointer-events: none;
  }
}
